# Multi-Chain Deployment Configuration

# === ETHEREUM NETWORK (Token Deployment) ===
# Ethereum Mainnet
MAINNET_DEPLOYER_PRIVATE_KEY=your_ethereum_mainnet_private_key
MAINNET_RPC_URL=https://mainnet.infura.io/v3/your_project_id

# Ethereum Sepolia Testnet
DEPLOYER_PRIVATE_KEY=your_ethereum_sepolia_private_key
SEPOLIA_RPC_URL=https://sepolia.infura.io/v3/your_project_id

# POLYGON NETWORK (Presale Deployment)
# Polygon Mainnet
POLYGON_DEPLOYER_PRIVATE_KEY=your_polygon_mainnet_private_key
POLYGON_RPC_URL=https://polygon-rpc.com

# Polygon Mumbai Testnet  
POLYGON_MUMBAI_RPC_URL=https://rpc-mumbai.maticvigil.com

# === MULTI-SIG CONTRACT ADDRESSES (For timelock governance) ===
# Use actual deployed multi-sig contract addresses, not individual EOAs
MULTISIG_PROPOSER_1_ADDRESS=0x1234567890123456789012345678901234567890  # Primary multi-sig contract (e.g., Gnosis Safe)
MULTISIG_PROPOSER_2_ADDRESS=0x2345678901234567890123456789012345678901  # Secondary multi-sig contract (optional)
GNOSIS_SAFE_ADDRESS=0x3456789012345678901234567890123456789012345678  # Gnosis Safe multi-sig contract
SIMPLE_MULTISIG_ADDRESS=0x4567890123456789012345678901234567890123    # SimpleMultiSig contract (if deployed)

# For Multi-sig
MULTISIG_OWNER_1=0xAD12537339A02E19338283f3318eCE34452DDDD7
MULTISIG_OWNER_2=0x2c008E34d78Ca094C41F5f454AD37304dEa08D3D

# === ROLE ADDRESSES (CRITICAL: Must use separate addresses for security) ===
# Replace with actual 42-character Ethereum addresses (0x followed by 40 hex characters)
TREASURY_ADDRESS=0x1234567890123456789012345678901234567890      # Multi-sig recommended - receives tokens on Ethereum
RECORDER_ADDRESS=0x2345678901234567890123456789012345678901      # Backend service wallet - records presale on Polygon
STAGE_MANAGER_ADDRESS=0x3456789012345678901234567890123456789012 # REQUIRED: Stage management operations
ADMIN_ADDRESS=0x4567890123456789012345678901234567890123456      # REQUIRED: Must be timelock address (deployed timelock)

# === OPTIONAL PRESALE ROLE ADDRESSES (Can be granted by timelock after deployment) ===
EMERGENCY_ROLE_ADDRESS=0x5678901234567890123456789012345678901234  # Emergency operations (granted by timelock)  
FINALIZER_ROLE_ADDRESS=0x6789012345678901234567890123456789012345  # Finalizes presale (granted by timelock)

# === TIMELOCK CONFIGURATION (48-hour delays for critical operations) ===
TIMELOCK_ADDRESS=                                 # Set after timelock deployment - use this as ADMIN_ADDRESS
TIMELOCK_DELAY=172800                            # 48 hours in seconds (required minimum)
# Note: Proposers/Executors are now the multi-sig contract addresses defined above

# === GAS REPORTING ===
REPORT_GAS=true                                   # Enable gas reporting in tests

# ============================================================================
# CRITICAL SECURITY UPDATES FOR AUDIT COMPLIANCE
# ============================================================================
#
# 1. MANDATORY ADDRESS REQUIREMENTS (New Architecture):
#    - RECORDER_ADDRESS: Backend service for purchase recording (REQUIRED)
#    - STAGE_MANAGER_ADDRESS: Stage management operations (REQUIRED - separate address)  
#    - ADMIN_ADDRESS: MUST be timelock contract address (REQUIRED)
#    - All three addresses MUST be different - no address reuse allowed
#
# 2. MULTI-SIG GOVERNANCE ARCHITECTURE:
#    - MULTISIG_PROPOSER_*_ADDRESS: Actual multi-sig contract addresses (Gnosis Safe, etc.)
#    - Timelock proposers/executors should be multi-sig contracts, not individual EOAs
#    - Multi-sig contracts handle consensus, timelock handles delays
#    - No individual EOAs should have direct timelock control in production
#
# 3. TIMELOCK GOVERNANCE (Audit Compliance):
#    - Only timelock can perform admin operations (48-hour delay)
#    - No immediate emergency withdrawal - all emergencies go through timelock
#    - Deployer has ZERO operational privileges after deployment
#    - Constructor requires 3 separate addresses: (recorder, stageManager, admin)
#
# 4. DEPLOYMENT WORKFLOW:
#    Step 1: Deploy multi-sig contracts (Gnosis Safe or SimpleMultiSig)
#    Step 2: Deploy timelock contract with multi-sig contracts as proposers/executors
#    Step 3: Set ADMIN_ADDRESS to deployed timelock address
#    Step 4: Deploy presale with (RECORDER, STAGE_MANAGER, TIMELOCK) addresses
#    Step 5: Optional roles (EMERGENCY, FINALIZER) granted by timelock later
#
# 5. MULTI-SIG → TIMELOCK → PRESALE WORKFLOW:
#    - Multi-sig contracts propose operations to timelock
#    - Timelock enforces 48-hour delay
#    - Multi-sig contracts execute operations after delay
#    - Presale contract receives admin commands only from timelock
#
# 6. TESTNET DEPLOYMENT CHECKLIST:
#    ✓ Deploy multi-sig contracts first (SimpleMultiSig or Gnosis Safe)
#    ✓ Set up multi-sig contract addresses in environment
#    ✓ Configure RPC endpoints for Sepolia (Ethereum) and Amoy (Polygon)
#    ✓ Deploy timelock: npx hardhat run scripts/deploy-timelock.js --network sepolia
#    ✓ Copy timelock address to ADMIN_ADDRESS in .env
#    ✓ Deploy presale: npx hardhat run scripts/deploy.js --network amoy
#    ✓ Test multi-sig → timelock → presale operation flow
#    ✓ Verify contracts on block explorers
#
# 7. PRODUCTION DEPLOYMENT:
#    - Use hardware wallets or additional multi-sig wallets for deployment
#    - Test entire multi-sig → timelock → presale workflow on testnet first
#    - Ensure multi-sig contracts are properly configured with appropriate signers
#    - Consider using separate deployment addresses from operational addresses